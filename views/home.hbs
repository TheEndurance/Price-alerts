<div class="row">
  <div id="success"></div>
  <div id="errors"></div>
<!--   {{> errorList errors}}
  {{> successMessage success}} -->
  <div class="d-flex justify-content-center">
    <form method="POST" action="/" id="createAlertForm">
      <fieldset>
        <legend>Subscribe to a price alert</legend>
        {{> select providers}}
        {{> select markets}}
        {{> select symbols}}
        <div class="form-group">
          <label for="alertprice" class="form-label mt-4">Alert Price</label>
          <input type="number" class="form-control" id="alertprice" name="alertprice" step="any">
        </div>
        <div class="form-group">
          <label for="email" class="form-label mt-4">Email address</label>
          <input type="email" class="form-control" id="email" name="email" aria-describedby="emailHelp" placeholder="Enter email">
          <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
        </div>
        <div class="d-flex">
          <button type="submit" class="btn btn-primary">Submit</button>
          <div id="formSubmitLoader" class="select-loading-spinner spinner-border text-info ms-2 mt-1"></div>
        </div>
      </fieldset>
    </form>  
  </div>
</div>
<script>
  $(document).ready(function(){
    $('#createAlertForm').submit(function(e) {
      $("#formSubmitLoader").show();
      $.ajax({
        type: 'post',
        url: window.location.origin,
        data: $('#createAlertForm').serialize()
      }).done((data) => {
        if (data.errors) {
          const errorListHtml = Handlebars.templates['errorList']({
            errors: data.errors,
            headingMsg: 'Submission error!'
          });
          $("#errors").html(errorListHtml);
        }
        else if (data.success) {
          const successMessageHtml = Handlebars.templates['successMessage'](data.success);
          $("#success").html(successMessageHtml);
          $("#errors").empty();
        }
      }).fail((err) => {
        alert(err);
        console.log(err);
      }).always(() => {
        $("#formSubmitLoader").hide();
      });
      e.preventDefault();
    });
    $('select#{{symbols.id}}').select2({
      theme: 'bootstrap-5'
    });
    const symbolSelect = {
      containerSelector: "#{{symbols.id}}Container",
      selectTemplateContext: {
        label: "{{symbols.label}}",
        id: "{{symbols.id}}",
        name: "{{symbols.name}}",
        blankOptionDisplay: "{{symbols.blankOptionDisplay}}"
      },
      templateName: "select",
      apiUrlFn: (marketType) => {
        const provider = $("#{{providers.id}}").find("option:selected").attr('value');
        console.log(`${window.location.origin}/symbols/${provider}/${marketType}`);
        return `${window.location.origin}/symbols/${provider}/${marketType}`;
      },
      afterRender: () => {
        $('select#{{symbols.id}}').select2({
          theme: 'bootstrap-5'
        });
      }
    };
    const marketSelect = {
      containerSelector: "#{{markets.id}}Container",
      childDependentSelects: [symbolSelect],
      selectTemplateContext: {
        label: "{{markets.label}}",
        id: "{{markets.id}}",
        name: "{{markets.name}}",
        blankOptionDisplay: "{{markets.blankOptionDisplay}}"
      },
      templateName: "select",
      apiUrlFn: (provider) => {
        return `${window.location.origin}/markets/${provider}`;
      }
    };
    const eventHandlers = {
      ["{{providers.id}}"] : marketSelect,
      ["{{markets.id}}"]: symbolSelect
    };
    $("#createAlertForm").change(function(event) {
      const target = event.target;
      if ( eventHandlers[target.id]) {
        const { containerSelector, selectTemplateContext, childDependentSelects, templateName, apiUrlFn, afterRender } = eventHandlers[target.id];
        selectTemplateContext.loading = true;
        selectTemplateContext.options = [];
        const emptySelectHtml = Handlebars.templates[templateName](selectTemplateContext);
        $(containerSelector).html(emptySelectHtml);
        if (Array.isArray(childDependentSelects)) {
          childDependentSelects.forEach((select) => {
            const { containerSelector: depContainerSelector, selectTemplateContext: depSelectTemplateContext, afterRender: depSelectAfterRender } = select;
            depSelectTemplateContext.options = [];
            const depSelectHtml = Handlebars.templates[templateName](depSelectTemplateContext);
            $(depContainerSelector).html(depSelectHtml);
            if (depSelectAfterRender) {
              depSelectAfterRender();
            }
          });
        } 
        const selectedValue = $(target).find("option:selected").attr('value');
        const apiUrl = apiUrlFn(selectedValue);
        $.get(apiUrl, (data, status) => {
          selectTemplateContext.options = data.options;
          selectTemplateContext.loading = false;
          const selectHtml = Handlebars.templates[templateName](selectTemplateContext);
          $(containerSelector).html(selectHtml);
          if (afterRender) {
            afterRender();
          }
        });
      }
    });
  });
</script>